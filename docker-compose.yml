services:
  postgres_db:
    container_name: postgres_db
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=linktic_db
    networks:
      - my_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  eureka-server:
    container_name: eureka-server
    image: eureka-server
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - my_network
    restart: "no"

  api-gateway:
    container_name: api-gateway
    image: api-gateway
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    networks:
      - my_network
    depends_on:
      - eureka-server
    restart: "no"

  products-service:
    container_name: products-service
    image: products-service
    build:
      context: ./products-service
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres_db:5432/linktic_db
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - INTERNAL_API_KEY=linktic-internal-key-2024
    networks:
      - my_network
    depends_on:
      - postgres_db
      - eureka-server
    restart: "no"

  inventory-service:
    container_name: inventory-service
    image: inventory-service
    build:
      context: ./inventory-service
    ports:
      - "8082:8082"
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres_db:5432/linktic_db
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - INTERNAL_API_KEY=linktic-internal-key-2024
    networks:
      - my_network
    depends_on:
      - postgres_db
      - eureka-server
      - products-service
    restart: "no"

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data: 
version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: linktic-postgres
    environment:
      POSTGRES_DB: linktic_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - linktic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservicio de Productos
  products-service:
    build:
      context: ./products-service
      dockerfile: Dockerfile
    container_name: linktic-products-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/linktic_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      INTERNAL_API_KEY: linktic-internal-key-2024
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - linktic-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Microservicio de Inventario
  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: linktic-inventory-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/linktic_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      INTERNAL_API_KEY: linktic-internal-key-2024
      PRODUCTS_SERVICE_BASE_URL: http://products-service:8081
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      products-service:
        condition: service_healthy
    networks:
      - linktic-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (opcional para cach√©)
  redis:
    image: redis:7-alpine
    container_name: linktic-redis
    ports:
      - "6379:6379"
    networks:
      - linktic-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:

networks:
  linktic-network:
    driver: bridge 